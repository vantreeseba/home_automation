esphome:
  name: "raspiaudio-muse-luxe"
  friendly_name: Raspiaudio Muse Luxe
  name_add_mac_suffix: true
  min_version: 2023.4.0
  on_boot:
    then:
      - output.turn_on: pw # power on the amp

esp32:
  board: esp-wrover-kit
  framework:
    version: 2.0.5
    source: ~3.20005.0
    platform_version: platformio/espressif32 @ 5.3.0
    type: arduino
  variant: ESP32

external_components:
  - source: github://pr#3552 # DAC support https://github.com/esphome/esphome/pull/3552
    components: [es8388]
    refresh: 0s

es8388:

output:
  - platform: gpio
    pin:
      number: 21
      mode: OUTPUT
    id: pw

logger:

# Enable Home Assistant API
api:
  services:
  - service: start_va
    then:
      - voice_assistant.start
  - service: stop_va
    then:
      - voice_assistant.stop
ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: raspiaudio-muse-luxe-d53450.lan
  fast_connect: True

i2c:
  sda: GPIO18
  scl: GPIO23

i2s_audio:
- i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO5

microphone:
- platform: i2s_audio
  id: echo_microphone
  i2s_din_pin: GPIO35
  adc_type: external
  pdm: false
  bits_per_sample: 32bit

speaker:
  - platform: i2s_audio
    id: echo_speaker
    dac_type: external
    i2s_dout_pin: GPIO26
    mode: mono

media_player:
- platform: i2s_audio
  name: None # uses the device name
  id: echo_audio
  i2s_dout_pin: GPIO26
  disabled_by_default: false
  dac_type: external

voice_assistant:
  id: test_id
  microphone: echo_microphone
  speaker: echo_speaker
  silence_detection: True

binary_sensor:
- platform: gpio
  pin:
    number: GPIO12
    inverted: true
    mode:
      input: true
      output: false
      open_drain: false
      pullup: false
      pulldown: false
    drive_strength: 20.0
  name: Middle button
  disabled_by_default: true
  entity_category: diagnostic
  id: echo_button
  on_click:
      - if:
          condition: voice_assistant.is_running
          then:
            - voice_assistant.stop:
          else:
            - voice_assistant.start_continuous:
  # on_press:
  # - then:
  #   - voice_assistant.start: {}
  # on_release:
  # - then:
  #   - voice_assistant.stop: {}
- platform: gpio
  pin:
    number: GPIO19
    inverted: true
    mode:
      input: true
      pullup: true
  name: Volume Up
  on_click:
    - media_player.volume_up: {}
- platform: gpio
  pin:
    number: GPIO32
    inverted: true
    mode:
      input: true
      pullup: true
  name: Volume Down
  on_click:
    - media_player.volume_down: {}

light:
- platform: fastled_clockless
  id: led
  internal: True
  pin: GPIO22
  default_transition_length: 0s
  chipset: SK6812
  num_leds: 1
  rgb_order: GRB
  restore_mode: ALWAYS_OFF
  gamma_correct: 2.8
  flash_transition_length: 0s
  effects:
    - pulse:
        name: "Fast Pulse"
        transition_length: 0.2s
        update_interval: 0.2s
    - pulse:
        name: "Slow Pulse"
        update_interval: 2s

sensor:
  - platform: adc
    pin: GPIO33
    name: Battery
    icon: "mdi:battery-outline"
    device_class: voltage
    state_class: measurement
    unit_of_measurement: V
    update_interval: 15s
    accuracy_decimals: 3
    attenuation: 11db
    raw: true
    filters:
      - multiply: 0.00173913 # 2300 -> 4, for attenuation 11db, based on Olivier's code
      - exponential_moving_average:
          alpha: 0.2
          send_every: 2
      - delta: 0.002

#define PixelPin 22

#define SD_CS         13
#define SPI_MOSI      15
#define SPI_MISO      2
#define SPI_SCK       14
#define I2S_DOUT      26
#define I2S_BCLK      5
#define I2S_LRC       25
#define I2S_DIN       35
#define I2SN (i2s_port_t)0
#define SDA 18
#define SCL 23

#define PA      GPIO_NUM_21      // Amp power ON
#define AUXD    GPIO_NUM_27      // AUX In detect 27
#define SDD     GPIO_NUM_34      // Sd detect

#define MU GPIO_NUM_12      // Pause/Play
#define VM GPIO_NUM_32      // Vol-
#define VP GPIO_NUM_19     // Vol+
